use std::{env, fs, path::PathBuf, sync::LazyLock};

static CARGO_MANIFEST_DIR: LazyLock<PathBuf> =
    LazyLock::new(|| PathBuf::from(env::var("CARGO_MANIFEST_DIR").unwrap()));

static ANSI_DIR: LazyLock<PathBuf> = LazyLock::new(|| CARGO_MANIFEST_DIR.join("ansi"));
static HTML_DIR: LazyLock<PathBuf> = LazyLock::new(|| CARGO_MANIFEST_DIR.join("html"));

const GENERATED_COMMENT: &str = "<!--
  This file was automatically generated from an ANSI source file (.ansi).
  Do not edit this file manually â€” any changes will be overwritten
  the next time the build script runs.
-->";

fn main() {
    fs::create_dir_all(HTML_DIR.as_path()).unwrap();
    for entry in ANSI_DIR.read_dir().unwrap() {
        let entry = entry.unwrap();
        let file_name = entry.file_name();
        let file_name = file_name.to_string_lossy();
        if file_name.ends_with(".ansi") {
            let content = fs::read_to_string(entry.path()).unwrap();
            let html = ansi_to_html::convert(&content).unwrap();
            let html = format!("{GENERATED_COMMENT}\n\n<pre><code>{html}</code></pre>\n");
            let out_path = HTML_DIR.join(format!("{file_name}.html"));
            fs::write(out_path, html).unwrap();
        }
    }
}
